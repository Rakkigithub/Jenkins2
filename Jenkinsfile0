pipeline {
    agent { label 'slave1' }

    environment {
        IMAGE_NAME = 'jenkins/jenkins:lts'
        CONTAINER_NAME = 'jenkins45'
        VOLUME_NAME = 'jenkins_home'
    }

    stages {
        stage('Docker Pull') {
            steps {
                script {
                    echo "Pulling Docker image: ${IMAGE_NAME}"
                    sh "sudo docker pull ${IMAGE_NAME}"
                    input message: 'Proceed to Create Volume?'
                }
            }
        }

        stage('Create Volume') {
            steps {
                script {
                    echo "Creating Docker volume: ${VOLUME_NAME}"
                    sh "sudo docker volume create ${VOLUME_NAME}"
                    input message: 'Proceed to Run Jenkins Container?'
                }
            }
        }

        stage('Run Jenkins Container') {
            steps {
                script {
                    echo "Running container: ${CONTAINER_NAME}"
                    sh """
                        sudo docker run -d --name ${CONTAINER_NAME} \\
                        -p 8080:8080 -p 50000:50000 \\
                        -v ${VOLUME_NAME}:/var/jenkins_home \\
                        --restart unless-stopped ${IMAGE_NAME}
                    """
                    input message: 'Proceed to Get Initial Admin Password?'
                }
            }
        }

        stage('Get Initial Admin Password') {
            steps {
                script {
                    echo "Fetching Jenkins initial admin password..."
                    sh "sleep 10"
                    sh "sudo docker exec ${CONTAINER_NAME} cat /var/jenkins_home/secrets/initialAdminPassword || true"
                    input message: 'Proceed to Cleanup?'
                }
            }
        }
    }

    post {
        always {
            script {
                input message: 'Do you want to clean up the container and volume?'
                echo 'Cleaning up container and volume...'
                sh "sudo docker rm -f ${CONTAINER_NAME} || true"
                sh "sudo docker volume rm ${VOLUME_NAME} || true"
            }
        }
    }
}
